name: CI for Keycloak with Docker

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main
      - 'feature/*'

# env:
#   DOCKER_COMPOSE_FILE: docker-compose-dev.yml
#   DOCKER_IMAGE_NAME: ceai-cqen-keycloak:latest
#   REALM_TEMPLATE_FILE: ceai-realm.template.json
#   HOMEPAGE_URL: http://localhost:8080
#   TIMEOUT: 60
#   INTERVAL: 5
#   SERVER_OPTIONS__HOSTNAME: smtp4dev
#   POSTGRES_PASSWORD: password
#   KEYCLOAK_ADMIN: admin
#   KEYCLOAK_ADMIN_PASSWORD: cqen
#   POSTGRES_DB: keycloak
#   POSTGRES_USER: keycloak
#   KC_DB: postgres
#   KC_DB_URL: jdbc:postgresql://postgres/keycloak
#   KC_HOSTNAME: localhost
#   KC_FEATURES: hostname:v2
#   KC_HTTP_RELATIVE_PATH: /
#   KC_METRICS_ENABLED: true
#   KC_HEALTH_ENABLED: true
#   KC_PROXY_HEADERS: forwarded
#   KC_HTTP_MANAGEMENT_PORT: 9000
#   IMG_VERSION: 25.0.2
#   ENV: dev

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Docker
#       uses: docker/setup-buildx-action@v1

#     - name: Copy realm template file
#       run: cp tests/${{ env.REALM_TEMPLATE_FILE }} container/realms/

#     - name: Install Docker Compose
#       run: |
#         sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
#         sudo chmod +x /usr/local/bin/docker-compose

#     - name: Build and start containers
#       run: |
#         docker-compose -f $DOCKER_COMPOSE_FILE build
#         docker-compose -f $DOCKER_COMPOSE_FILE up -d

#     - name: Wait for Keycloak to start
#       run: |
#         chmod +x ./boucle.sh
#         ./boucle.sh

#         # elapsed=0
#         # while true; do
#         #   HTTP_CODE=$(curl -s -L -o /dev/null -w '%{http_code}' $HOMEPAGE_URL)
#         #   if [ "$HTTP_CODE" = "200" ]; then
#         #     echo "Keycloak is ready! (HTTP code: $HTTP_CODE)"
#         #     break
#         #   fi
#         #   if [ $elapsed -ge $TIMEOUT ]; then
#         #     echo "Keycloak did not become available within $TIMEOUT seconds. Exiting... (last HTTP code: $HTTP_CODE)"
#         #     exit 1
#         #   fi
#         #   echo "Waiting for Keycloak to be available... (HTTP code: $HTTP_CODE)"
#         #   sleep $INTERVAL
#         #   elapsed=$((elapsed + INTERVAL))
#         # done

#     - name: Run tests
#       run: python3 tests/test_keycloak.py

#     - name: Stop and remove Docker containers
#       if: always()
#       run: docker-compose -f $DOCKER_COMPOSE_FILE down

#     - name: Cleanup copied files
#       if: always()
#       run: |
#         rm container/realms/${{ env.REALM_TEMPLATE_FILE }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker environment
      uses: docker/setup-buildx-action@v1

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Create .env file
      run: |
        echo "SERVER_OPTIONS__HOSTNAME=smtp4dev" >> .env
        echo "POSTGRES_DB=keycloak" >> .env
        echo "POSTGRES_USER=keycloak" >> .env
        echo "POSTGRES_PASSWORD=password" >> .env
        echo "KEYCLOAK_ADMIN=admin" >> .env
        echo "KEYCLOAK_ADMIN_PASSWORD=cqen" >> .env
        echo "KC_DB=postgres" >> .env
        echo "KC_DB_URL=jdbc:postgresql://postgres/keycloak" >> .env
        echo "KC_HOSTNAME=localhost" >> .env
        echo "KC_DB_USERNAME=keycloak" >> .env
        echo "KC_DB_PASSWORD=password" >> .env
        echo "KC_FEATURES=hostname:v2" >> .env
        echo "KC_HTTP_RELATIVE_PATH=/" >> .env
        echo "KC_METRICS_ENABLED=true" >> .env
        echo "KC_HEALTH_ENABLED=true" >> .env
        echo "KC_PROXY_HEADERS=forwarded" >> .env
        echo "KC_HTTP_MANAGEMENT_PORT=9000" >> .env
        echo "IMG_VERSION=25.0.2" >> .env
        echo "ENV=dev" >> .env


    - name: Load environment variables and run script
      run: |
        set -a
        source .env
        set +a

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  

    - name: Install dependencies
      run: |
        pip install requests pytest  

    - name: Build and run the script
      run: |
        chmod +x ./run_tests.sh
        ./run_tests.sh